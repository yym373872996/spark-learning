# kafka 集群代理节点地址，必须指定，无默认值
bootstrap.servers=localhost:9092
# key 的序列化方式，必须指定，无默认值
#key.serializer=org.apache.kafka.common.serialization.StringSerializer
# value 的序列化方式，必须指定，无默认值
#value.serializer=org.apache.kafka.common.serialization.StringSerializer
# acks=0  最高速度，不回应 offset为 -1 不保证消息送达
# acks=1  发送到 leader 但不保证送到集群中的其它服务器，当 leader 宕机时，消息可能丢失
# acks=all  消息在集群中多台服务器落地后才能返回，可靠性最高
acks=all
# 消息发送失败的最大重试次数，默认为 0
retries=0
# producer 为每个 partition 发送消息所设置的缓冲区大小，配置后消息会以批处理形式发送，但也需要更多内存，默认为 16 KB
batch.size=16384
# 设置一个 producer 在发送前的等待时间，目的是聚合更多的消息一次性发送，以减少请求次数，默认为 0 ms
linger.ms=1
# 给 producer 分配的最大缓存内存大小，如果数据产生速度大于向 kafka 代理节点发送的速度，则 producer 会造成阻塞或抛出异常，默认为 32 MB
buffer.memory=33554432
# 用来指定发送数据的压缩类型，默认不压缩，可选值有：none、gzip、snappy
#compression.type=none
# 表示密钥存储文件中的私钥密码，对客户端来说是可选项，默认为 null
#ssl.key.password=null
# 密钥存储文件的位置，可选项，可用于客户端的双向认证，默认为 null
#ssl.keystore.location=null
# 密钥存储文件的存储密码
#ssl.keystore.password=null
# 认证存储文件的位置
#ssl.truststore.location=null
# 认证存储文件的密码，如果不设置密码，仍然可以访问认证存储器，只是完整性检查功能被禁止
#ssl.truststore.password=null
# 在请求时传递给服务器的 ID 字符串，目的在于方便定位请求来源，默认为空字符串
#client.id=""
# 设置每个连接的最大释放时间，默认为 9 min
#connections.max.idle.ms=540000
# 控制块的时长，当缓冲空间不够或元数据丢失时会产生块，默认为 1 min
#max.block.ms=60000
# 请求的最大字节数，默认为 1 MB
#max.request.size=1048576
# 实现 Partition 接口的分区类
#partitioner.class=ClassName
# 在读取数据时使用 TCP 接收缓冲区的大小，默认为 32 KB
#receive.buffer.bytes=32768
# 客户端等待请求响应的最大时间，如果在这个时间内没有收到响应，则客户端将重新发送请求，默认为 30 s
#request.timeout.ms=30000
# 通过 Java 认证和授权服务进行登录，默认为 null
#sasl.jaas.config=null
# Kerberos 协议服务名称，默认为 null
#sasl.kerberos.service.name=null
# 用于客户端连接的 SASL 机制，默认为 GSSAPI
#sasl.mechanism=GSSAPI
# 用于与 kafka 代理节点进行通信的协议，可用协议有：PLAINTEXT、SSL、SASL_PLAINTEXT、SASL_SSL，默认为 PLAINTEXT
#security.protocol=PLAINTEXT
# 发送数据时缓冲空间大小，默认为 128 KB
#send.buffer.bytes=131072
# 加密套接字协议集合，默认为 TLSv1,TLSv1.1,TLSv1.2
#ssl.enabled.protocols=TLSv1,TLSv1.1,TLSv1.2
# 密钥存储文件的文件格式，默认 JKS
#ssl.keystore.type=JKS
# 加密套接字协议，默认为 TLS
#ssl.protocol=TLS
# 安全提供者程序使用的加密套接字协议连接，默认值由 JVM 提供
#ssl.provider=null
# 认证存储文件的文件类型，默认为 JKS
#ssl.truststore.type=JKS
# 如果设置为 true，则生产者将确保每条消息的单个副本都能写入数据流；如果为 false，当代理节点失败时，生产者触发重试机制，可能会在数据流中写入重试消息的副本。默认为 false
#enable.idempotence=false
# 用作拦截器的类的列表，实现生产者拦截器接口，允许用户在生产者发送消息前进行拦截，默认为 null
#interceptor.classes=null
# 在阻塞之前，客户端在单个连接上发送的最大请求数，默认为 5
#max.in.flight.requests.per.connection=5
# 设置自动更新元数据的最大时间间隔，默认为 5 min
#metadata.max.age.ms=300000
# 类的列表，用于衡量监控指标，默认为空字符串
#metric.reporters=""
# 用于维护监控的样本数，默认为 2
#metrics.num.samples=2
# 监控的最高纪录级别，默认为 INFO
#metrics.recording.level=INFO
# 监控系统维护可配置的样本数量，默认为 30000
#metrics.sample.window.ms=30000
# 当重新连接到一个重复连接失败的 kafka 代理节点时，允许等待的最大时间，默认为 1 s
#reconnect.backoff.max.ms=1000
# 在尝试重新连接到给定主机之前等待的基本时间，默认为 50 ms
#reconnect.backoff.ms=50
# 向代理节点发送数据失败后，重试的时间间隔，默认为 100 ms
#retry.backoff.ms=100
